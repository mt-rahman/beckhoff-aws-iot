<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Save_IMU" Id="{0593a3af-b256-48a9-a4b4-c7aba26ff107}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Save_IMU
VAR
	fbSqlDatabase	: FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#1000S);
	fbSqlCommand	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#1000S);
	fbSqlResult		: FB_SQLResultEvt(sNetID:='', tTimeout   := T#1000S); 
	sCmd			: STRING(1000000);
	sCmd2			: STRING(10000);
	nState			: INT := 9;
	
	Done			: BOOL;
	i				: ULINT;
	Vacuumed		: BOOL := FALSE;
	
	aReadStruct		: ST_SelectStructIMU;
	Oldest_data		: DWORD;
	Today			: DWORD;
	
	Deleted			: BOOL;
	Pragma_Done		: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* connect to localdb *)
IF NOT fbSqlDatabase.bConnected THEN
	
	IF Vacuum_IMU.Vacuumed THEN
		fbSqlDatabase.Connect(4);	
	END_IF
	
ELSE

	CASE nState OF
				
		0:
			Done := FALSE;
			IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
				IF fbSqlDatabase.bError THEN
					nState := 255; 
				ELSE
					IF NOT Deleted THEN
						nState := nState+1;
					ELSE
						nState := 6; //skip to save data
					END_IF
				END_IF
			END_IF
			
		1:	(* execute pragmas *)
			IF NOT Pragma_Done THEN
				sCmd	:= 'PRAGMA journal_mode = WAL; PRAGMA synchronous = NORMAL; PRAGMA temp_store = MEMORY; PRAGMA mmap_size = 30000000000; PRAGMA page_size = 32768; PRAGMA locking_mode = EXCLUSIVE;';
			
				IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
					IF fbSQLCommand.bError THEN
						nState := 255; 
					ELSE
						nState 		:= nState+1; 
						Pragma_Done := TRUE;
					END_IF
				END_IF
			
			ELSE
				nState 		:= nState+1;
			END_IF
			
		2:
			(* select oldest data from buffer_imu *)
			sCmd	:= 'SELECT * FROM `imu` ORDER BY datetime ASC LIMIT 1';
			
			IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd), SIZEOF(sCmd), ADR(fbSqlResult)) THEN
				IF fbSQLCommand.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		3:
			IF fbSqlResult.Read(0, 1, ADR(aReadStruct), SIZEOF(aReadStruct), TRUE, TRUE) THEN
				IF fbSqlResult.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		4:
			IF fbSqlResult.Release() THEN
				IF fbSqlResult.bError THEN
					nState := 255;
				ELSE
					nState := nState+1;
				END_IF
			END_IF
			
		5:	
			//oldest data < today - 3 months?
			aReadStruct.datetime 	:= REPLACE(aReadStruct.datetime, '-', 1, 11);
			Oldest_data				:= DT_TO_DWORD(SYSTEMTIME_TO_DT(STRING_TO_SYSTEMTIME(aReadStruct.datetime)));
			Today					:= DT_TO_DWORD(SYSTEMTIME_TO_DT(Background_Time.fbTime.systemTime));
			
			IF Oldest_data < (Today - 7776000) THEN
				sCmd	:= 'DELETE FROM imu WHERE datetime < datetime($'now$', $'-3 month$');';
		
				IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
					IF fbSQLCommand.bError THEN
						nState := 255; 
					ELSE
						nState 	:= nState+1;
						Deleted	:= TRUE;
					END_IF
					
				END_IF
			ELSE
				nState 	:= nState+1;
				Deleted	:= TRUE;
			END_IF
			
		6:	
			(* build query *)	
			sCmd	:= 'INSERT INTO imu (datetime,trailer_id_lead,trailer_id_rear,pitch_lead,roll_lead,ax_lead,ay_lead,az_lead,pitch_rear,roll_rear,ax_rear,ay_rear,az_rear) VALUES ';
			
			FOR i := 1 TO Get_IMU.Data_Length BY 1 DO
					sCmd2:= CONCAT('($'', Get_IMU.TimeStr[i]);
					sCmd2:= CONCAT(sCmd2, '$',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Trailer_ID_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Trailer_ID_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Pitch_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Roll_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccX_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccY_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccZ_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Pitch_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.Roll_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccX_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccY_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Get_IMU.AccZ_Rear[i]);
					
					IF i = Get_IMU.Data_Length THEN
						sCmd2:= CONCAT(sCmd2, ')');
					ELSE	
						sCmd2:= CONCAT(sCmd2, '),');
					END_IF
					
					CONCAT2(ADR(sCmd), ADR(sCmd2), ADR(sCmd), SIZEOF(sCmd));
				END_FOR
			
			IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
				IF fbSQLCommand.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
				
			END_IF
		
		7: 
			Done	:= TRUE;
			nState	:= nState + 1;
			
		8:
			IF NOT Main_Send.New_IMU THEN
				nState := nState + 1;
			END_IF
			
		9:
			IF Main_Send.Sent THEN
				nState := 0;
			END_IF
				
		255:
			nState := 0;
	
	END_CASE
	
END_IF]]></ST>
    </Implementation>
    <LineIds Name="Save_IMU">
      <LineId Id="73" Count="1" />
      <LineId Id="363" Count="0" />
      <LineId Id="360" Count="2" />
      <LineId Id="75" Count="10" />
      <LineId Id="273" Count="1" />
      <LineId Id="276" Count="1" />
      <LineId Id="275" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="323" Count="0" />
      <LineId Id="325" Count="14" />
      <LineId Id="324" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="243" Count="27" />
      <LineId Id="241" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="281" Count="1" />
      <LineId Id="286" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="290" Count="9" />
      <LineId Id="288" Count="0" />
      <LineId Id="300" Count="2" />
      <LineId Id="289" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="129" Count="3" />
      <LineId Id="163" Count="33" />
      <LineId Id="162" Count="0" />
      <LineId Id="136" Count="7" />
      <LineId Id="128" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="107" Count="1" />
      <LineId Id="372" Count="9" />
      <LineId Id="371" Count="0" />
      <LineId Id="110" Count="5" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>