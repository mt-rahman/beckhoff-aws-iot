<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Get_IMU" Id="{e29dc521-fa59-4daa-b2aa-3903a6229bc7}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Get_IMU
VAR
	fbSqlDatabase	: FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#1000S);
	fbSqlCommand	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#1000S);
	fbSqlCommand2	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#1000S);
	fbSqlResult		: FB_SQLResultEvt(sNetID:='', tTimeout   := T#1000S); 
    aReadStruct		: ARRAY[1..2500] OF ST_SelectStructIMU;
	nState			: INT;
	sCmd			: STRING(20000);
	sCmd2			: STRING(20000);
	val1			: INT;
	val2			: INT;
	exec			: BOOL;
	diff			: BOOL;
	rel				: BOOL;
	exec2			: BOOL;
	diff2			: BOOL;	
	rel2			: BOOL;
	exec3			: BOOL;
	diff3			: BOOL;	
	rel3			: BOOL;
	
	count			: ULINT;
	Data_Length		: ULINT;
	datetime		: STRING;
	Done			: BOOL;
	Deleted			: BOOL := TRUE;
	i 				: ULINT;
	
	TimeStr			: ARRAY[1..2500] OF STRING;	
	Trailer_ID_Lead	: ARRAY[1..2500] OF STRING;
	Trailer_ID_Rear	: ARRAY[1..2500] OF STRING;
	Pitch_Lead		: ARRAY[1..2500] OF STRING;
	Roll_Lead		: ARRAY[1..2500] OF STRING;
	AccX_Lead		: ARRAY[1..2500] OF STRING;
	AccY_Lead		: ARRAY[1..2500] OF STRING;
	AccZ_Lead		: ARRAY[1..2500] OF STRING;
	Pitch_Rear		: ARRAY[1..2500] OF STRING;
	Roll_Rear		: ARRAY[1..2500] OF STRING;
	AccX_Rear		: ARRAY[1..2500] OF STRING;
	AccY_Rear		: ARRAY[1..2500] OF STRING;
	AccZ_Rear		: ARRAY[1..2500] OF STRING;
	
	Dbid			: UDINT;
	Switch			: BOOL;
	
	bDisconnect		: BOOL;
	
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* get new data only if prev data sent to aws & saved to localdb *)
IF Main_SendIMU.Saved THEN
	Done	:= FALSE;
	Deleted	:= FALSE;
	IF fbSqlDatabase.bConnected THEN
		nState 	:= 1;
	ELSE
		nState 	:= 0;
	END_IF
END_IF

IF Switch THEN
	IF Buffer_IMU.Dbid = Dbid AND Buffer_IMU.fbSqlDatabase.bConnected THEN
		Switch := FALSE;
	END_IF
	
//ELSIF Buffer_IMU.Initialized THEN
ELSIF Buffer_IMU.Initialized AND Buffer_IMU.fbSqlDatabase.bConnected THEN
	
	CASE nState OF
		
		0:
			//choose db opposite of buffer
			IF Buffer_IMU.Dbid = 2 THEN
				Dbid := 5;
			ELSE
				Dbid := 2;
			END_IF
			
			IF fbSqlDatabase.Connect(Dbid) THEN
				IF fbSqlDatabase.bError THEN
					nState := 255;
				ELSE
					nState := nState + 1;
				END_IF
			END_IF
			
		1:
			IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
				IF fbSqlDatabase.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
		
		2:	
			IF Deleted THEN
				nState := nState+1;
			ELSE
				(* delete saved data from buffer *)
				sCmd2	:= 'DELETE FROM buffer_imu WHERE datetime IN (SELECT datetime FROM buffer_imu ORDER BY datetime ASC LIMIT ';
				sCmd2	:= CONCAT(sCmd2, ULINT_TO_STRING(Data_Length));
				sCmd2	:= CONCAT(sCmd2, ');');
				
				IF fbSQLCommand.Execute(ADR(sCmd2), SIZEOF(sCmd2)) THEN
					IF fbSQLCommand.bError THEN
						nState := 255; 
					ELSE
						nState := nState+1; 
						Deleted := TRUE;
					END_IF
				END_IF
			END_IF
			
		3:	
			(* count no of records in buffer *)
			sCmd2 := 'SELECT COUNT(*) FROM `buffer_imu`';
			
			IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd2), SIZEOF(sCmd2), ADR(fbSqlResult)) THEN
				IF fbSQLCommand.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		4:	
			IF fbSqlResult.Read(0, 1, ADR(count), SIZEOF(count), TRUE, TRUE) THEN
				IF fbSqlResult.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		5:
			IF fbSqlResult.Release() THEN
				IF fbSqlResult.bError THEN
					nState := 255;
				ELSE
					nState := nState + 1;
				END_IF
				
			END_IF
			
		6:
			(* determine no of records to select *)
			IF count = 0 THEN
				Data_Length := 0;
				nState := 12;
				
			ELSIF count < 50 THEN
				Data_Length := count;
				nState := nState+1;
				
			ELSIF count < 250 THEN
				Data_Length := 50;
				nState := nState+1;
				
			ELSIF count < 500 THEN
				Data_Length := 250;
				nState := nState+1;
				
			ELSIF count < 750 THEN
				Data_Length := 500;
				nState := nState+1;
				
			ELSE
				Data_Length := 750;
				nState := nState+1;

			END_IF
			
		7:	
			(* get records from buffer *)
			sCmd2 := 'SELECT * FROM `buffer_imu` ORDER BY datetime ASC LIMIT ';
			sCmd2 := CONCAT(sCmd2, ULINT_TO_STRING(Data_Length));
			
			IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd2), SIZEOF(sCmd2), ADR(fbSqlResult)) THEN
				IF fbSQLCommand.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		8:
			IF fbSqlResult.Read(0, ULINT_TO_UDINT(Data_Length), ADR(aReadStruct), SIZEOF(aReadStruct), TRUE, TRUE) THEN
				IF fbSqlResult.bError THEN
					nState := 255; 
				ELSE
					nState := nState+1; 
				END_IF
			END_IF
			
		9:
			IF fbSqlResult.Release() THEN
				IF fbSqlResult.bError THEN
					nState := 255;
				ELSE
					nState := nState+1;
				END_IF
			END_IF
		
		10:
			(* parse query result *)
			FOR i:=1 TO Data_Length BY 1 DO
				TimeStr[i]			:= aReadStruct[i].datetime;
				
				Trailer_ID_Lead[i]			:= LINT_TO_STRING(aReadStruct[i].trailer_id_lead);
				Trailer_ID_Rear[i]			:= LINT_TO_STRING(aReadStruct[i].trailer_id_rear);
				//RoadSec[i]				:= UINT_TO_STRING(aReadStruct[i].RoadSec);
				Pitch_Lead[i]				:= REAL_TO_STRING(aReadStruct[i].pitch_lead);
				Roll_Lead[i]				:= REAL_TO_STRING(aReadStruct[i].roll_lead);
				AccX_Lead[i]				:= REAL_TO_STRING(aReadStruct[i].ax_lead);
				AccY_Lead[i]				:= REAL_TO_STRING(aReadStruct[i].ay_lead);
				AccZ_Lead[i]				:= REAL_TO_STRING(aReadStruct[i].az_lead);
				Pitch_Rear[i]				:= REAL_TO_STRING(aReadStruct[i].pitch_rear);
				Roll_Rear[i]				:= REAL_TO_STRING(aReadStruct[i].roll_rear);
				AccX_Rear[i]				:= REAL_TO_STRING(aReadStruct[i].ax_rear);
				AccY_Rear[i]				:= REAL_TO_STRING(aReadStruct[i].ay_rear);
				AccZ_Rear[i]				:= REAL_TO_STRING(aReadStruct[i].az_rear);
				
			END_FOR
			
			nState	:= nState + 1;
			
		11:
			Done	:= TRUE;
			
		12:
			//disconnect from db
			IF bDisconnect := fbSqlDatabase.Disconnect() THEN
				IF fbSqlDatabase.bError THEN
					nState := 255;
				ELSE
					nState := 0;
					Switch := TRUE;
				END_IF
			END_IF			
		
		255:
			nState	:= 0;	
			
	END_CASE
	
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="Get_IMU">
      <LineId Id="509" Count="1" />
      <LineId Id="512" Count="0" />
      <LineId Id="781" Count="0" />
      <LineId Id="1473" Count="1" />
      <LineId Id="1476" Count="1" />
      <LineId Id="1475" Count="0" />
      <LineId Id="513" Count="0" />
      <LineId Id="906" Count="1" />
      <LineId Id="1091" Count="0" />
      <LineId Id="1104" Count="1" />
      <LineId Id="1093" Count="0" />
      <LineId Id="1478" Count="0" />
      <LineId Id="1087" Count="0" />
      <LineId Id="910" Count="0" />
      <LineId Id="1053" Count="0" />
      <LineId Id="911" Count="0" />
      <LineId Id="1057" Count="0" />
      <LineId Id="1481" Count="0" />
      <LineId Id="1082" Count="0" />
      <LineId Id="1077" Count="0" />
      <LineId Id="1079" Count="1" />
      <LineId Id="1078" Count="0" />
      <LineId Id="1451" Count="0" />
      <LineId Id="1062" Count="0" />
      <LineId Id="1064" Count="1" />
      <LineId Id="1464" Count="0" />
      <LineId Id="1467" Count="0" />
      <LineId Id="1071" Count="0" />
      <LineId Id="1061" Count="0" />
      <LineId Id="1450" Count="0" />
      <LineId Id="912" Count="9" />
      <LineId Id="923" Count="18" />
      <LineId Id="1479" Count="0" />
      <LineId Id="942" Count="23" />
      <LineId Id="989" Count="3" />
      <LineId Id="1219" Count="0" />
      <LineId Id="1221" Count="4" />
      <LineId Id="1235" Count="20" />
      <LineId Id="1220" Count="0" />
      <LineId Id="993" Count="1" />
      <LineId Id="1480" Count="0" />
      <LineId Id="995" Count="53" />
      <LineId Id="1256" Count="1" />
      <LineId Id="1259" Count="0" />
      <LineId Id="1369" Count="0" />
      <LineId Id="1363" Count="1" />
      <LineId Id="1469" Count="2" />
      <LineId Id="1368" Count="0" />
      <LineId Id="1468" Count="0" />
      <LineId Id="1049" Count="3" />
      <LineId Id="908" Count="0" />
      <LineId Id="1054" Count="0" />
      <LineId Id="909" Count="0" />
      <LineId Id="321" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>