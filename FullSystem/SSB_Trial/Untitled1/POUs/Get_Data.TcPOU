<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Get_Data" Id="{4915af13-8898-4876-ac87-d399fc3c78ec}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Get_Data
VAR
	fbSqlDatabase	: FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand2	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
	fbSqlResult		: FB_SQLResultEvt(sNetID:='', tTimeout   := T#5S); 
    aReadStruct		: ARRAY[1..10] OF ST_SelectStruct;
	nState			: INT;
	nState2			: INT;
	sCmd			: STRING(20000);
	sCmd2			: STRING(20000);
	val1			: INT;
	val2			: INT;
	exec			: BOOL;
	diff			: BOOL;
	rel				: BOOL;
	exec2			: BOOL;
	diff2			: BOOL;	
	rel2			: BOOL;
	exec3			: BOOL;
	diff3			: BOOL;	
	rel3			: BOOL;
	
	count			: LINT;
	lim				: USINT;
	datetime		: STRING;
	Done			: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* get new data only if prev data sent to aws & saved to localdb *)
IF Main2.Saved THEN
	nState2 := 0;
	Done	:= FALSE;
END_IF

(* connect to localdb *)
IF NOT fbSqlDatabase.bConnected THEN
	fbSqlDatabase.Connect(1);
ELSE

	CASE nState2 OF
		
		0:
			IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
				IF fbSqlDatabase.bError THEN
					nState2 := 255; 
				ELSE
					nState2 := nState2+1; 
				END_IF
			END_IF
			
		1:	(* count no of records in buffer *)
			sCmd2 := 'SELECT COUNT(*) FROM `buffer_data` ORDER BY datetime ASC';
			
			IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd2), SIZEOF(sCmd2), ADR(fbSqlResult)) THEN
				IF fbSQLCommand.bError THEN
					nState2 := 255; 
				ELSE
					nState2 := nState2+1; 
				END_IF
			END_IF
			
		2:	
			IF fbSqlResult.Read(0, 1, ADR(count), SIZEOF(count), TRUE, TRUE) THEN
				IF fbSqlResult.bError THEN
					nState2 := 255; 
				ELSE
					nState2 := nState2+1; 
				END_IF
			END_IF
			
		3:
			IF fbSqlResult.Release() THEN
				IF fbSqlResult.bError THEN
					nState2 := 255;
				ELSE
					nState2 := nState2+1;
					
					(* determine no of records to select *)
					IF count < 10 THEN
						lim := 1;
					ELSE
						lim := 10;
					END_IF
					
				END_IF
			END_IF
			
		4:	(* get records from buffer *)
			sCmd2 := 'SELECT * FROM `buffer_data` ORDER BY datetime ASC LIMIT ';
			sCmd2 := CONCAT(sCmd2, USINT_TO_STRING(lim));
			
			IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd2), SIZEOF(sCmd2), ADR(fbSqlResult)) THEN
				IF fbSQLCommand.bError THEN
					nState2 := 255; 
				ELSE
					nState2 := nState2+1; 
				END_IF
			END_IF
			
		5:
			IF fbSqlResult.Read(0, lim, ADR(aReadStruct), SIZEOF(aReadStruct), TRUE, TRUE) THEN
				IF fbSqlResult.bError THEN
					nState2 := 255; 
				ELSE
					nState2 := nState2+1; 
				END_IF
			END_IF
			
		6:
			IF fbSqlResult.Release() THEN
				IF fbSqlResult.bError THEN
					nState2 := 255;
				ELSE
					nState2 := nState2+1;
				END_IF
			END_IF
		7:
			Done	:= TRUE;
END_CASE

END_IF

]]></ST>
    </Implementation>
    <LineIds Name="Get_Data">
      <LineId Id="238" Count="0" />
      <LineId Id="108" Count="1" />
      <LineId Id="237" Count="0" />
      <LineId Id="110" Count="4" />
      <LineId Id="177" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="15" Count="7" />
      <LineId Id="241" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="30" Count="6" />
      <LineId Id="242" Count="0" />
      <LineId Id="147" Count="6" />
      <LineId Id="45" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="46" Count="5" />
      <LineId Id="137" Count="0" />
      <LineId Id="131" Count="4" />
      <LineId Id="130" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="244" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="118" Count="5" />
      <LineId Id="61" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="154" Count="6" />
      <LineId Id="139" Count="0" />
      <LineId Id="246" Count="0" />
      <LineId Id="162" Count="5" />
      <LineId Id="176" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="75" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>