<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Buffer_IMU" Id="{5645648d-eb13-4929-86df-ef282757094e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Buffer_IMU
VAR
	pSec		: WORD;
	diff		: BOOL;
	
	TimeStr		: ARRAY [1..50] OF STRING;
	//Millis		: ARRAY [1..50] OF STRING;
	Trailer_ID_Lead	: ARRAY [1..50] OF STRING;
	//RoadSec		: ARRAY [1..50] OF STRING;
	Pitch_Lead		: ARRAY [1..50] OF STRING;
	Roll_Lead		: ARRAY [1..50] OF STRING;
	AccX_Lead		: ARRAY [1..50] OF STRING;
	AccY_Lead		: ARRAY [1..50] OF STRING;
	AccZ_Lead		: ARRAY [1..50] OF STRING;
	
	Trailer_ID_Rear	: ARRAY [1..50] OF STRING;
	//RoadSec		: ARRAY [1..50] OF STRING;
	Pitch_Rear		: ARRAY [1..50] OF STRING;
	Roll_Rear		: ARRAY [1..50] OF STRING;
	AccX_Rear		: ARRAY [1..50] OF STRING;
	AccY_Rear		: ARRAY [1..50] OF STRING;
	AccZ_Rear		: ARRAY [1..50] OF STRING;
	
	fbSqlDatabase	: FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
	fbSqlResult		: FB_SQLResultEvt(sNetID:='', tTimeout   := T#5S); 
	sCmd			: STRING(500000);
	sCmd2			: STRING(500000);
	nState			: INT;
	
	Done			: BOOL;
	i				: INT;
	 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* convert to strings *)
//PrimeMover_ID		:= Read_ID.PrimeMover_ID;
TimeStr				:= Read_IMU.TimeStr;
//Millis			:= Read_IMU.Millis;
Trailer_ID_Lead		:= Read_IMU.Trailer_ID_Lead;
Pitch_Lead			:= Read_IMU.Pitch_Lead;
Roll_Lead			:= Read_IMU.Roll_Lead;
AccX_Lead			:= Read_IMU.AccX_Lead;
AccY_Lead			:= Read_IMU.AccY_Lead;
AccZ_Lead			:= Read_IMU.AccZ_Lead;

Trailer_ID_Rear		:= Read_IMU.Trailer_ID_Rear;
Pitch_Rear			:= Read_IMU.Pitch_Rear;
Roll_Rear			:= Read_IMU.Roll_Rear;
AccX_Rear			:= Read_IMU.AccX_Rear;
AccY_Rear			:= Read_IMU.AccY_Rear;
AccZ_Rear			:= Read_IMU.AccZ_Rear;

(* save data to buffer every second *)
IF diff:= Background_Time.cSec <> pSec THEN

	IF Done THEN
		nState 	:= 0;
		Done	:= FALSE;	
	END_IF
	
	
	(* connect to localdb *)
	IF NOT fbSqlDatabase.bConnected THEN
		fbSqlDatabase.Connect(2);
	ELSE
	
		CASE nState OF
				
			0:
				IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
					IF fbSqlDatabase.bError THEN
						nState := 255; 
					ELSE
						nState := nState+1; 
					END_IF
				END_IF
				
			1:	
				(* build query *)	
				sCmd:= 'INSERT INTO buffer_imu (datetime,trailer_id_lead,trailer_id_rear,pitch_lead,roll_lead,ax_lead,ay_lead,az_lead,pitch_rear,roll_rear,ax_rear,ay_rear,az_rear) VALUES ';
				
				FOR i := 1 TO 50 BY 1 DO
					sCmd2:= CONCAT('($'', TimeStr[i]);
					sCmd2:= CONCAT(sCmd2, '$',');
					sCmd2:= CONCAT(sCmd2, Trailer_ID_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Trailer_ID_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Pitch_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Roll_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccX_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccY_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccZ_Lead[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Pitch_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, Roll_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccX_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccY_Rear[i]);
					sCmd2:= CONCAT(sCmd2, ',');
					sCmd2:= CONCAT(sCmd2, AccZ_Rear[i]);
					
					IF i = 50 THEN
						sCmd2:= CONCAT(sCmd2, ')');
					ELSE	
						sCmd2:= CONCAT(sCmd2, '),');
					END_IF
					
					CONCAT2(ADR(sCmd), ADR(sCmd2), ADR(sCmd), SIZEOF(sCmd));
				END_FOR
				
				
				IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
					IF fbSQLCommand.bError THEN
						nState := 255; 
					ELSE
						nState := nState+1; 
						pSec := Background_Time.cSec;
						
					END_IF
				END_IF
				
			2: 
				Done	:= TRUE;
					
			255:
				nState := 0;
	
		END_CASE
	
	END_IF

END_IF]]></ST>
    </Implementation>
    <LineIds Name="Buffer_IMU">
      <LineId Id="38" Count="0" />
      <LineId Id="273" Count="2" />
      <LineId Id="291" Count="4" />
      <LineId Id="290" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="276" Count="4" />
      <LineId Id="148" Count="0" />
      <LineId Id="55" Count="29" />
      <LineId Id="191" Count="0" />
      <LineId Id="315" Count="31" />
      <LineId Id="313" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="209" Count="1" />
      <LineId Id="118" Count="19" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>