<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Main2" Id="{f159ed40-cca9-4e3d-ac6a-ec5e9cf1af8e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main2
VAR
	i 			: INT;
	Data_Length : INT;

	Truck_ID		: STRING := '1';
	TimeStr			: ARRAY[1..20] OF STRING;	
	Trailer_ID		: ARRAY[1..20] OF STRING;
	Lat				: ARRAY[1..20] OF STRING;
	Lon				: ARRAY[1..20] OF STRING;
	Speed			: ARRAY[1..20] OF STRING;
	Overspeed		: ARRAY[1..20] OF STRING;
	Payload_EMA		: ARRAY[1..20] OF STRING;
	Payload_Raw		: ARRAY[1..20] OF STRING;
	Overload		: ARRAY[1..20] OF STRING;
	Pressure_Cyl	: ARRAY[1..20] OF STRING;
	Pressure_Val	: ARRAY[1..20] OF STRING;
	Strain_Left		: ARRAY[1..20] OF STRING;
	Strain_Right	: ARRAY[1..20] OF STRING;
	EventCode		: ARRAY[1..20] OF STRING;
	Cycle_Duration	: ARRAY[1..20] OF STRING;
	Hyd_Efficiency	: ARRAY[1..20] OF STRING;
	
	Done		: BOOL;
	Sent		: BOOL;
	New_Data	: BOOL;
	Saved		: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* get data from database *)
Get_Data();
 
IF New_Data := Get_Data.Done THEN
	
	(* parse query result *)
	i := 1;
	Data_Length	:= Get_Data.lim;
	WHILE (i <= Data_Length) DO
		TimeStr[i]			:= DT_TO_STRING(Get_Data.aReadStruct[i].TimeStr);
		TimeStr[i]			:= Delete(TimeStr[i], 3, 1);
		TimeStr[i]			:= Replace(TimeStr[i], 'T', 1, 11);
		TimeStr[i]			:= Insert(TimeStr[i], 'Z', 19);
		Trailer_ID[i]		:= UINT_TO_STRING(Get_Data.aReadStruct[i].Trailer_ID);
		Lat[i]				:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Lat);
		Lon[i]				:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Lon);
		Speed[i]			:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Speed);
		Overspeed[i]		:= BOOL_TO_STRING(Get_Data.aReadStruct[i].Overspeed);
		Payload_EMA[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Payload_EMA);
		Payload_Raw[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Payload_Raw);
		Overload[i]			:= BOOL_TO_STRING(Get_Data.aReadStruct[i].Overload);
		Pressure_Cyl[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Pressure_Cyl);
		Pressure_Val[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Pressure_Val);
		Strain_Left[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Strain_Left);
		Strain_Right[i]		:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Strain_Right);
		EventCode[i]		:= UINT_TO_STRING(Get_Data.aReadStruct[i].EventCode);
		Cycle_Duration[i]	:= UDINT_TO_STRING(Get_Data.aReadStruct[i].Cycle_Duration);
		Hyd_Efficiency[i]	:= LREAL_TO_STRING(Get_Data.aReadStruct[i].Hyd_Efficiency);
		
		i := i+1;
	END_WHILE
	
	(* send data to aws iot core *)
	IF NOT Sent THEN
		Send_Data();
		
		IF Send_Data.published THEN
			Sent	:= TRUE;
		END_IF	
		
	END_IF
	
	(* save data to localdb *)
	IF Sent THEN
		Save_Data();
		
		IF Save_Data.Done THEN
			Saved := TRUE;
		END_IF	
		
	END_IF
	
ELSE
	
	Sent	:= FALSE;
	Saved 	:= FALSE;
	
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="Main2">
      <LineId Id="293" Count="57" />
      <LineId Id="158" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>