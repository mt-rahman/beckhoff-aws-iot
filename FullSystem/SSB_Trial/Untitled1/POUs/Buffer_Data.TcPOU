<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Buffer_Data" Id="{cc02954f-a949-4289-a7a3-7d2c4eb6e01e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Buffer_Data
VAR
	pSec		: WORD;
	diff		: BOOL;
	
	TimeStr				: STRING;
	Trailer_ID_Lead		: STRING;
	Trailer_ID_Rear		: STRING;
	Lat					: STRING;
	Lon					: STRING;
	Speed				: STRING;
	Overspeed			: STRING;
	Payload_Lead		: STRING;
	Payload_Rear		: STRING;
	Overload_Lead		: STRING;
	Overload_Rear		: STRING;
	Pressure_Lead		: STRING;
	Pressure_Rear		: STRING;
	Overpressure_Lead	: STRING;
	Overpressure_Rear	: STRING;
	EventCode			: STRING;
	
	fbSqlDatabase	: FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand	: FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
	fbSqlResult		: FB_SQLResultEvt(sNetID:='', tTimeout   := T#5S); 
	sCmd			: STRING(10000);
	sCmd2			: STRING(10000);
	nState			: INT;
	
	Done			: BOOL;
	 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* convert to strings *)
TimeStr				:= Main_Read.TimeStr;
TimeStr				:= REPLACE(TimeStr, ' ', 1, 11);
Trailer_ID_Lead		:= UINT_TO_STRING(Read_ID.Trailer_ID_Lead);
Trailer_ID_Rear		:= UINT_TO_STRING(Read_ID.Trailer_ID_Rear);
Lat					:= REAL_TO_STRING(Read_GPS.Lat);
Lon					:= REAL_TO_STRING(Read_GPS.Lon);
Speed				:= REAL_TO_STRING(Read_GPS.Speed);
Overspeed			:= BOOL_TO_STRING(Read_GPS.Overspeed);
Payload_Lead		:= REAL_TO_STRING(Read_Payload.Payload_Lead);
Payload_Rear		:= REAL_TO_STRING(Read_Payload.Payload_Rear);
Overload_Lead		:= BOOL_TO_STRING(Read_Payload.Overload_Lead);
Overload_Rear		:= BOOL_TO_STRING(Read_Payload.Overload_Rear);
Pressure_Lead		:= REAL_TO_STRING(Read_Pressure.Pressure_Lead);
Pressure_Rear		:= REAL_TO_STRING(Read_Pressure.Pressure_Rear);
Overpressure_Lead	:= BOOL_TO_STRING(Read_Pressure.Overpressure_Lead);
Overpressure_Rear	:= BOOL_TO_STRING(Read_Pressure.Overpressure_Rear);
EventCode			:= Read_FatigueCam.EventCode;

(* save data to buffer every second *)
IF diff:= Background_Time.cSec <> pSec THEN

	IF Done THEN
		nState 	:= 0;
		Done	:= FALSE;	
	END_IF
	
	
	(* connect to localdb *)
	IF NOT fbSqlDatabase.bConnected THEN
		fbSqlDatabase.Connect(1);
	ELSE
	
		CASE nState OF
				
			0:
				IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
					IF fbSqlDatabase.bError THEN
						nState := 255; 
					ELSE
						nState := nState+1; 
					END_IF
				END_IF
				
			1:	
				(* build query *)	
				sCmd:= 'INSERT INTO buffer_data (datetime,trailer_id_lead,trailer_id_rear,latitude,longitude,speed,overspeed,payload_lead,payload_rear,overload_lead,overload_rear,pressure_lead,pressure_rear,overpressure_lead,overpressure_rear,event_code) VALUES ($'';
				sCmd2:= TimeStr;
				sCmd2:= CONCAT(sCmd2, '$',');
				sCmd2:= CONCAT(sCmd2, Trailer_ID_Lead);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Trailer_ID_Rear);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Lat);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Lon);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Speed);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Overspeed);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Payload_Lead);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Payload_Rear);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Overload_Lead);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Overload_Rear);
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Pressure_Lead); 
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Pressure_Rear); 
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Overpressure_Lead); 
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, Overpressure_Rear); 
				sCmd2:= CONCAT(sCmd2, ',');
				sCmd2:= CONCAT(sCmd2, EventCode);
				sCmd2:= CONCAT(sCmd2, ')');
				CONCAT2(ADR(sCmd), ADR(sCmd2), ADR(sCmd), SIZEOF(sCmd));
				
				IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
					IF fbSQLCommand.bError THEN
						nState := 255; 
					ELSE
						nState := nState+1; 
						pSec := Background_Time.cSec;
						
					END_IF
				END_IF
				
			2: 
				Done	:= TRUE;
					
			255:
				nState := 0;
	
		END_CASE
	
	END_IF

END_IF
]]></ST>
    </Implementation>
    <LineIds Name="Buffer_Data">
      <LineId Id="722" Count="1" />
      <LineId Id="893" Count="0" />
      <LineId Id="724" Count="0" />
      <LineId Id="858" Count="0" />
      <LineId Id="725" Count="6" />
      <LineId Id="857" Count="0" />
      <LineId Id="732" Count="0" />
      <LineId Id="735" Count="0" />
      <LineId Id="901" Count="0" />
      <LineId Id="900" Count="0" />
      <LineId Id="738" Count="33" />
      <LineId Id="859" Count="1" />
      <LineId Id="772" Count="13" />
      <LineId Id="861" Count="1" />
      <LineId Id="786" Count="3" />
      <LineId Id="895" Count="2" />
      <LineId Id="894" Count="0" />
      <LineId Id="794" Count="0" />
      <LineId Id="799" Count="23" />
      <LineId Id="140" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>